#include <LiquidCrystal.h> 
LiquidCrystal lcd(2, 3, 4, 5, 6, 7); 
#include <SoftwareSerial.h> 
#define RX 9 
#define TX 10 
#define trigger 11 
#define echo 12 
#define buzz A1 
int flame_sensor_pin = 8 ; 
int flame_pin = HIGH ; 
float time=0,distance=0; 
int limitswitch=A0; 
int state= LOW; 
int value=0; 
String AP = "elegant"; // AP NAME 
String PASS = "smartwork"; // AP PASSWORD 
String API = "FSGAFQZAH5KUSCWN"; // Write API KEY 9EWU4V8S8ECXFQUX 
String HOST = "api.thingspeak.com"; 
String PORT = "80"; 
int countTrueCommand; 
int countTimeCommand; 
boolean found = false; 
int valSensor = 1; 
 
SoftwareSerial esp8266(RX,TX); 
 
void setup() { 
 lcd.begin(16, 2); 
 lcd.clear(); lcd.setCursor(2, 0); lcd.print(" WELCOME"); 
 lcd.print(""); 
36 
 lcd.setCursor(0, 1); lcd.print(""); 
 pinMode ( flame_sensor_pin , INPUT ); 
 pinMode(trigger,OUTPUT); 
 pinMode(echo,INPUT); 
 pinMode(limitswitch,INPUT); 
 pinMode(buzz,OUTPUT); 
 delay(1000); 
 Serial.begin(9600); 
 esp8266.begin(115200); 
 sendCommand("AT",5,"OK"); 
 sendCommand("AT+CWMODE=1",5,"OK"); 
 sendCommand("AT+CWJAP=\""+ AP +"\",\""+ PASS +"\"",20,"OK"); 
} 
void loop() 
{ 
 String getData = "GET /update?api_key="+ API 
+"&field1="+getflame()+"&field2="+getdistance()+"&field3="+getmetal(); 
 sendCommand("AT+CIPMUX=1",5,"OK"); 
 sendCommand("AT+CIPSTART=0,\"TCP\",\""+ HOST +"\","+ PORT,15,"OK"); 
 sendCommand("AT+CIPSEND=0," +String(getData.length()+4),4,">"); 
 esp8266.println(getData);delay(1500);countTrueCommand++; 
 sendCommand("AT+CIPCLOSE=0",5,"OK"); 
} 
String getflame() 
{ 
flame_pin = digitalRead ( flame_sensor_pin ); 
lcd.clear(); 
if (flame_pin == LOW ) 
{ 
lcd.print(" FLAME DETECTED") ; 
delay(1000); 
} 
37 
 
else 
{ 
lcd.print("No flame"); 
delay(1000); 
} 
return String(flame_pin); 
} 
String getdistance() 
{ 
 lcd.clear(); 
 digitalWrite(trigger,LOW); 
 delayMicroseconds(2); 
 digitalWrite(trigger,HIGH); 
 delayMicroseconds(10); 
 digitalWrite(trigger,LOW); 
 delayMicroseconds(2); 
 time=pulseIn(echo,HIGH); 
 distance=time*340/20000; 
 lcd.print("Distance:"); 
 lcd.print(distance); 
 lcd.print("cm"); 
 if(distance<15) 
 { 
 digitalWrite(buzz,HIGH); 
 delay(500); 
 digitalWrite(buzz,LOW); 
 delay(500); 
 digitalWrite(buzz,HIGH); 
 delay(500); 
 digitalWrite(buzz,LOW); 
 } 
 else 
38 
 { 
 digitalWrite(buzz,LOW); 
 delay(1000); 
 } 
 return String(distance); 
 } 
 String getmetal() 
{ 
 lcd.clear(); 
value = analogRead(limitswitch); 
Serial.print(value); 
delay(1000); 
if(value!=state) 
{ 
 state=value; 
 Serial.println("sensor value ="); 
 if (value<=150) 
 { 
 Serial.println("target detected"); 
 lcd.print("METAL DETECTED"); 
 digitalWrite(buzz,HIGH); 
 delay(1000); 
 } 
 else 
 { 
 digitalWrite(buzz,LOW); 
 delay(1000); 
 } 
 } 
 return String(value); 
} 
39 
void sendCommand(String command, int maxTime, char readReplay[]) { 
 Serial.print(countTrueCommand); 
 Serial.print(". at command => "); 
 Serial.print(command); 
 Serial.print(" "); 
 while(countTimeCommand < (maxTime*1)) 
 { 
 esp8266.println(command);//at+cipsend 
 if(esp8266.find(readReplay))//ok 
 { 
 found = true; 
 break; 
 } 
 
 countTimeCommand++; 
 } 
 
 if(found == true) 
 { 
 Serial.println("OYI"); 
 countTrueCommand++; 
 countTimeCommand = 0; 
 } 
 
 if(found == false) 
 { 
 Serial.println("Fail"); 
 countTrueCommand = 0; 
 countTimeCommand = 0; 
 } 
 found = false; 
